##
## Copyright (C) 2017-2025 Hanson Robotics
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <https://www.gnu.org/licenses/>.
##
# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = haipy
description = Hanson AI SDK Python Library
author = Hanson Robotics
author_email = dev@hansonrobotics.com
license = Hanson Robotics
long_description = file: README.md
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/hansonrobotics/haipy
# Add here related links, for example:
project_urls =
    Documentation = https://docs.hr-tools.io/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    #grpcio-status>=1.32.0,<=1.48.2
    #grpcio-tools>=1.32.0,<=1.48.2
    #grpcio>=1.32.0,<=1.48.2
    aiohttp>=3.8,<4.0
    aioredis>=2.0.1,<3.0
    airtable-python-wrapper==0.15.2
    awscli>=1.29,<2.0
    babel>=2.8.0,<3.0
    boto3>=1.24
    bunnet>=1.3.0
    coloredlogs>=14.0
    google-cloud-translate>=1.3.1,<2.0
    jinja2>=3.0.3,<4.0
    langchain
    langchain-community>=0.0.27
    langchain-mongodb
    langchain-openai
    lxml
    openai>=1.3
    openpyxl>=3.0.7,<4.0
    pandas>=1.2.5,<2.0
    pinecone-client>=2.2.1,<3.0
    pydantic>=2.0.0,<3.0.0
    pymongo
    python-benedict>=0.24.1
    python-dotenv
    python-jose>=3.3.0
    pyyaml
    redis>=4.4.2,<5.0
    requests>=2.24.0,<3.0
    sqlalchemy>=1.3.18
    typing_extensions

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install haipy[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = haipy.module:function
# For example:
# console_scripts =
#     fibonacci = haipy.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
    --cov haipy --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.2
package = haipy
extensions =
